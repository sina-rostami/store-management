openapi: 3.0.3
info:
  title: Store Management
  description: |-
    This is the API documentation for Store Management project based on the OpenAPI 3.0 specification.
  contact:
    email: sina.rostami@email.kntu.ac.ir
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1

servers:
  - url: http://127.0.0.1:5000
tags:
  - name: order
    description: Everything about Orders
  - name: customer
    description: Everything about Customers
  - name: seller
    description: Everything about Sellers
  - name: product
    description: Everything about Products
  - name: login
    description: Everything about Authentication
paths:
  /order:
    post:
      tags:
        - order
      summary: new order
      description: Place a new order in the store
      operationId: addOrder
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
      requestBody:
        description: Place a new order in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addOrder'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    get:
      tags:
        - order
      summary: get orders
      description: get orders
      operationId: getOrder
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /customer:
    post:
      tags:
        - customer
      summary: new customer
      description: Create new customer in the store
      operationId: addCustomer
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addCustomer'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    get:
      tags:
        - customer
      summary: get customers
      description: get customers
      operationId: getCustomer
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /customer/{id}:
    put:
      tags:
        - customer
      summary: update customer
      description: Update customer in the store
      operationId: updateCustomer
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The customer ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addCustomer'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /seller:
    post:
      tags:
        - seller
      summary: add sellers
      description: add sellers
      operationId: addSeller
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Seller'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
        - seller
      summary: edit sellers
      description: edit sellers
      operationId: editSeller
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Seller'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    get:
      tags:
        - seller
      summary: get sellers
      description: get sellers
      operationId: getSeller
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Seller'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /product:
    post:
      tags:
        - product
      summary: new product
      description: Create new product in the store
      operationId: addProduct
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addProduct'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    get:
      tags:
        - product
      summary: get products
      description: get products
      operationId: getProduct
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /product/{id}:
    put:
      tags:
        - product
      summary: update product
      description: Update product in the store
      operationId: updateProduct
      parameters:
        - in: header
          name: x-access-token
          schema:
            type: string
          required: true
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: The product ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/addProduct'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /login:
    post:
      tags:
        - login
      summary: login
      description: login
      operationId: login
      requestBody:
        description: Authenticate a user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResp'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Wrong username or password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '500':
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'

components:
  schemas:
    addOrder:
      required:
        - seller_id
        - customer_id
        - products_ids
      type: object
      properties:
        seller_id:
          type: integer
          example: 1
        customer_id:
          type: integer
          example: 1
        products_ids:
          type: array
          items:
            type: integer
    Order:
      type: object
      properties:
        id:
          type: integer
          example: 1
        seller_id:
          type: integer
          example: 1
        customer_id:
          type: integer
          example: 1
        products_ids:
          type: array
          items:
            type: integer
        total_price:
          type: number
          example: 10
        date:
          type: number
          example: 1669315706.634264
    addCustomer:
      type: object
      properties:
        name:
          type: string
          example: "Ali"
        phone_number:
          type: string
          example: "0912312345"
        credit:
          type: number
          example: 10.5
    Customer:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Ali"
        credit:
          type: number
          example: 1000
        join_date:
          type: number
          example: 1669315706.634264
        is_active:
          type: boolean
          example: true
        phone_number:
          type: string
          example: "01232312342"
    Seller:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Ali"
        username:
          type: string
          example: "ali_ahmadi"
    addProduct:
      type: object
      properties:
        name:
          type: string
          example: "Ali"
        category_id:
          type: integer
          example: 0
        price:
          type: number
          example: 10.5
    Product:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Ali"
        category_id:
          type: integer
          example: 0
        price:
          type: number
          example: 10.5
    Login:
      type: object
      properties:
        username:
          type: string
          example: "ali"
        password:
          type: string
          example: "1234"
    LoginResp:
      type: object
      properties:
        token:
          type: string
          example: "123l1jo[o12jsad-12e[pwejas"
        role:
          type: string
          enum:
            - "seller"
            - "admin"
    ApiResponse:
      type: object
      properties:
        message:
          type: "string"
          enum:
            - "<message>"
            - "<key> is not defined in the json data."
            - "CREDIT_NOT_ENOUGH"
            - "INVALID_PASSWORD"
            - "INVALID_USERNAME"
            - "NOT_EXIST"
            - "CATEGORY_NOT_EXIST"
            - "NEGATIVE_PRICE"
            - "SUCCESS"
            - "ALREADY_EXISTS"
            - "NEGATIVE_CREDIT"
            - "EXPECTED_DATA"

